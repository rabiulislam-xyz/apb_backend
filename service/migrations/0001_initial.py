# Generated by Django 3.2.8 on 2022-06-21 12:26

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('word', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('city_corporation', models.CharField(blank=True, choices=[('BARISHAL', 'Barishal'), ('CHITTAGONG', 'Chittagong'), ('COMILLA', 'Comilla'), ('DHAKA_NORTH', 'Dhaka North'), ('DHAKA_SOUTH', 'Dhaka South'), ('GAZIPUR', 'Gazipur'), ('NARAYANGANJ', 'Narayanganj'), ('KHULNA', 'Khulna'), ('MYMENSINGH', 'Mymensingh'), ('RAJSHAHI', 'Rajshahi'), ('RANGPUR', 'Rangpur'), ('SYLHET', 'Sylhet')], max_length=60, null=True)),
                ('slug', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('word',),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('sorting_id', models.PositiveIntegerField(blank=True, help_text='Value for ordering/sorting list, lower is high priority', null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ('sorting_id', 'name'),
            },
        ),
        migrations.CreateModel(
            name='FieldName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('TEXT', 'Text'), ('RICH_TEXT', 'Rich Text'), ('NUMBER', 'Number'), ('BOOLEAN', 'Boolean'), ('DATE', 'Date'), ('URL', 'Url'), ('PHONE', 'Phone Number')], default='TEXT', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FieldValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='service.fieldname')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True, null=True)),
                ('path', models.URLField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('slug', models.CharField(blank=True, max_length=300, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('phone_number', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message='Must be a valid phone number of bangladesh', regex='^(?:\\+88|88)?(0(1|9)[3-9]\\d{7,10})$')])),
                ('address', models.TextField(blank=True, max_length=500, null=True)),
                ('is_reviewed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sorting_id', models.PositiveIntegerField(blank=True, help_text='Value for ordering/sorting list, lower is high priority', null=True, unique=True)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='services', to='service.area')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='services', to='service.category')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='service_created', to=settings.AUTH_USER_MODEL)),
                ('field_values', models.ManyToManyField(blank=True, related_name='_service_service_field_values_+', to='service.FieldValue')),
                ('images', models.ManyToManyField(blank=True, related_name='_service_service_images_+', to='service.Image')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='service_reviewed', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='service_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('sorting_id', 'name'),
            },
        ),
        migrations.CreateModel(
            name='CategoryType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='icons/')),
                ('sorting_id', models.PositiveIntegerField(blank=True, help_text='Value for ordering/sorting list, lower is high priority', null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('banner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='service.image')),
            ],
            options={
                'verbose_name_plural': 'Category Types',
                'ordering': ('sorting_id', 'name'),
            },
        ),
        migrations.CreateModel(
            name='CategoryFieldName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_required', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='service.category')),
                ('field_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='service.fieldname')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='banner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='service.image'),
        ),
        migrations.AddField(
            model_name='category',
            name='field_names',
            field=models.ManyToManyField(blank=True, related_name='_service_category_field_names_+', through='service.CategoryFieldName', to='service.FieldName'),
        ),
        migrations.AddField(
            model_name='category',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='categories', to='service.categorytype'),
        ),
    ]
